Version 0.1 - 21 December 2014
    - First stable version, public release

Version 0.2 - 26 January 2015
    - Minor fixes
    - Added prime-number related functions in <number_theory.h>:
        qpp::factors() - prime factors of positive integer
        qpp::isprime() - primality test

Version 0.3 - 15 February 2015
    - Added qpp::internal::Singleton<T>::get_thread_local_instance()

Version 0.4 - 8 March 2015
    - Added noexcept specification where suitable
    - Added the following exception types to the qpp::Exception::Type strong
        enumeration: NOT_QUBIT_MATRIX (replaces previous NOT_QUBIT_GATE),
        NOT_QUBIT_CVECTOR, NOT_QUBIT_RVECTOR and NOT_QUBIT_VECTOR
    - Added overloads of qpp::ptrace1(), qpp::ptrace2(), qpp::ptrace() and
        qpp::ptranspose() that allow a pure state input, as it was the case
        before with qpp::syspermute()
    - Added overloads of qpp::prod() and qpp::sum() for STL-like containers
    - Added new functions in <functions.h>:
        qpp::complement() - computes the complement of a subsystem vector
        qpp::rho2bloch() - qubit density matrix to Bloch vector
        qpp::bloch2rho() - Bloch vector to qubit density matrix
    - Added new functions in <instruments.h>:
        qpp::measure_seq() - measures subsystems sequentially
    - Removed support for the C-style random number engine, as it is not 
        thread safe. Hence, Eigen::Matrix::Random() should not be used, 
        use instead qpp::rand() functions.
    - Added support for unit testing via Google Mock/Google Test, see
        ./unit_tests/testing.cpp

Version 0.5 - 19 March 2015
    - Fixed a bug in class qpp::internal::Singleton<T> which allowed deleting
        the instance via a pointer. Now static void operator delete(void*) 
        is marked private.

Version 0.6 - 16 April 2015
    - Revert changes to qpp::internal::Singleton<T> (no need anymore for
        static void operator delete(void*)), but enforce clients to make
        both constructor and destructor private
    - Minor cosmetic changes

Version 0.7 - 22 April 2015
    - Marked all non-template functions defined in headers as "inline" and
        all singletons as "static", since otherwise including <qpp.h> in
        separate compilation units led to linker errors due to duplicated
        symbols

Version 0.7.1 - development
        
